@page "/"
@using CatolicoCantorWeb.Mock;
@inject HttpClient http


<div>

    <main>
        <div class="bg-light album py-5">
            <div class="input-group">
                <input class="form-control" type="text" placeholder="Search" aria-label="Search" aria-describedby="button-addon2" />
                <button id="button-addon2" class="btn btn-outline-secondary" type="button">
                    <i class="fas fa-search"></i>
                </button>
            </div>
            <div class="container">
                <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
                    @foreach (var item in musicas)
                    {
                        <div class="col">
                            <small class="text-muted">
                                @foreach(var i in item.Categories)
                                {
                                    @string.Concat(i.Nome," - ")
                                }
                                
                                </small>
                            <div class="card shadow-sm">
                                <div class="card-body">
                                    <div class="flex-row justify-content-center align-items-center">
                                        <div style="height: 200px;background: var(--bs-dark);max-width: 100%;">
                                            <iframe width="560" height="315" controls style="max-width: 100%;max-height: 100%;" loop src=@string.Concat("http://www.youtube.com/embed/",@item.Youtube) frameborder="0" allowfullscreen></iframe>
                                        </div>
                                    </div>
                                    <p class="card-text">@item.Nome - @item.Cantor</p>
                                    <div class="row">
                                        <div class="col col-4">
                                            <div></div>
                                            <div class="d-flex justify-content-between align-items-center float-start">
                                                <a target="_blank" _blank href=@string.Concat("https://www.letras.mus.br/",@item.Letra) class="card-text">LETRA</a>
                                            </div>
                                        </div>
                                        <div class="col col-4">
                                            <div></div>
                                            <div class="d-flex justify-content-between align-items-center float-end">
                                                <a target="_blank" _blank href=@string.Concat("https://www.cifraclub.com.br/",item.Cifra) class="card-text">CIFRA</a>
                                            </div>
                                        </div>
                                        <div class="col col-4">
                                            <div class="d-flex justify-content-between align-items-center float-end">
                                                <NewPlaylist Music="item" Playlists="playlists"/>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </main>
 
</div>

@code {
    List<Music> musicas = new();
    List<Playlist> playlists= new();
    List<Category> categories = new();
    Mocks mockMusics = new();

    protected override async Task OnInitializedAsync()
    {
        await GetMusics();
        await GetCategories();
        await GetPlaylists();
    }

    public async Task GetMusics()
    {
        musicas = await http.GetFromJsonAsync<List<Music>>("https://localhost:7100/v1/musics");
    }

    public async Task GetPlaylists()
    {
        playlists = await mockMusics.GetPlaylists();
        playlists.Add(new Playlist { Id = 0, Nome = "Nova Playlist" });
        playlists.Reverse();
    }

    public async Task GetCategories()
    {
        categories = await http.GetFromJsonAsync<List<Category>>("https://localhost:7100/v1/categories");
    }

}